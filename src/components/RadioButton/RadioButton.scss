@each $color in $colorType {
  .radio-button-container.#{$color} {
    display: inline-flex;
    gap: 8px;

    &.top {
      flex-direction: column;
    }

    &.bottom {
      flex-direction: column-reverse;
    }

    &.left {
      flex-direction: row;
      align-items: center;
    }

    &.right {
      flex-direction: row-reverse;
      align-items: center;
      justify-content: flex-end;
    }

    label{
      color:var(--color-common-main)
    }

    &:has(input:disabled) label {
      color: colorMapper(grayClr, 400);
    }

    input[type="radio"] {
      -webkit-appearance: none;
      appearance: none;
      width: 1.5em;
      height: 1.5em;
      border-radius: 50%;
      outline: none;
      border: 2px solid colorMapper($color, main);
      position: relative;
    }

    input[type="radio"]:disabled {
      border-color: colorMapper(grayClr, 300);
    }

    input[type="radio"]:checked {
      border-color: colorMapper($color, main);
      background-color: colorMapper($color, main);
    }

    input[type="radio"]:checked:before {
      content: "";
      display: block;
      width: 0.8em;
      height: 0.8em;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-image: url("@/assets/icons/checkmark.svg");
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
    }

    &.restricted:not(.primary) input[type="radio"]:checked:before {
      width: 1em;
      height: 1em;
      background-image: url("@/assets/icons/cancel_icon.svg");
    }

    &.sm > input {
      font-size: 0.8125rem;
      min-width: 16px;
      min-height: 16px;
    }
    &.sm > label {
      font-size: 0.8125rem;
    }

    &.md > input {
      font-size: 0.875rem;
      min-width: 20px;
      min-height: 20px;
    }
    &.md > label {
      font-size: 0.875rem;
    }

    &.lg > input {
      font-size: 0.9375rem;
      min-width: 24px;
      min-height: 24px;
    }
    &.lg > label {
      font-size: 0.9375rem;
    }
    &.pointer > label,
    input {
      cursor: pointer;
    }
  }
}
